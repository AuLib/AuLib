.TH "Phasor" 3 "Fri Dec 9 2016" "Version 0.0" "AuLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Phasor
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Phasor\&.h>\fP
.PP
Inherits \fBAudioBase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPhasor\fP (double freq, double phase=\&.0, double sr=def_sr, uint32_t vsize=def_vsize)"
.br
.ti -1c
.RI "virtual void \fBprocess\fP ()"
.br
.ti -1c
.RI "virtual void \fBprocess\fP (double freq)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBmod\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Phase signal (ramp) generator 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Phasor::Phasor (double freq, double phase = \fC\&.0\fP, double sr = \fCdef_sr\fP, uint32_t vsize = \fCdef_vsize\fP)"
\fBPhasor\fP constructor 
.br

.br
freq - frequency in Hz 
.br
phase - init phase (0-1) 
.br
 sr - sampling rate 
.br
vsize - vector size 
.br

.SH "Member Function Documentation"
.PP 
.SS "void Phasor::mod ()\fC [inline]\fP, \fC [protected]\fP"
phase modulo 
.SS "void Phasor::process ()\fC [virtual]\fP"
Process one vector of audio 
.SS "virtual void Phasor::process (double freq)\fC [inline]\fP, \fC [virtual]\fP"
Process one vector of audio with frequency freq 

.SH "Author"
.PP 
Generated automatically by Doxygen for AuLib from the source code\&.
